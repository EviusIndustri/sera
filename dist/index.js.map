{"version":3,"sources":["../src/index.js"],"names":["router","express","Router","sitePath","opts","options","dotfiles","showHidden","get","req","res","targetPath","originalUrl","split","target","path","join","stat","fs","statSync","isFile","mime","lookup","type","sendFile","existsSync","sendfile","err","status","send","spa","errno"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAEA,MAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEA;;;;;;;kBAMe,CAACC,QAAD,EAAWC,IAAX,KAAoB;AAClC,OAAMC,UAAU;AACfC,YAAUF,KAAKG,UAAL,GAAkB,OAAlB,GAA2B;AADtB,EAAhB;;AAIAP,QAAOQ,GAAP,CAAW,GAAX,EAAgB,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACnC,QAAMC,aAAaF,IAAIG,WAAJ,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAAnB;AACA,MAAI;AACH,SAAMC,SAASC,eAAKC,IAAL,CAAUb,QAAV,EAAoBQ,UAApB,CAAf;AACA,SAAMM,OAAO,MAAMC,aAAGC,QAAH,CAAYL,MAAZ,CAAnB;AACA,OAAGG,KAAKG,MAAL,EAAH,EAAkB;AACjB,QAAG,CAACC,oBAAKC,MAAL,CAAYR,MAAZ,CAAJ,EAAwB;AACvBJ,SAAIa,IAAJ,CAAS,YAAT;AACA;AACD,WAAOb,IAAIc,QAAJ,CAAaV,MAAb,EAAqBT,OAArB,CAAP;AACA,IALD,MAMI;AACH,QAAGa,aAAGO,UAAH,CAAcV,eAAKC,IAAL,CAAUb,QAAV,EAAoBQ,UAApB,EAAgC,YAAhC,CAAd,CAAH,EAAiE;AAChE,YAAOD,IAAIgB,QAAJ,CAAaX,eAAKC,IAAL,CAAUb,QAAV,EAAoBQ,UAApB,EAAgC,YAAhC,CAAb,CAAP;AACA;AACD,WAAOD,IAAIc,QAAJ,CAAaT,eAAKC,IAAL,CAAUb,QAAV,EAAqB,GAAEQ,UAAW,OAAlC,CAAb,EAAyDgB,GAAD,IAAS;AACvE,SAAGA,GAAH,EAAQ;AACP,aAAOjB,IAAIkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,GAArB,CAAP;AACA;AACD,KAJM,CAAP;AAKA;AACD,GAnBD,CAmBE,OAAMF,GAAN,EAAW;AACZ,OAAGvB,KAAK0B,GAAL,IAAY,IAAf,EAAqB;AACpB,WAAOpB,IAAIc,QAAJ,CAAaT,eAAKC,IAAL,CAAUb,QAAV,EAAqB,YAArB,CAAb,CAAP;AACA;AACD,OAAGwB,IAAII,KAAJ,IAAa,CAAC,CAAjB,EAAoB;AACnB,WAAOrB,IAAIkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,GAArB,CAAP;AACA;AACD,UAAOnB,IAAImB,IAAJ,CAASF,GAAT,CAAP;AACA;AACD,EA9BD;;AAgCA,QAAO3B,MAAP;AACA,C","file":"index.js","sourcesContent":["import express from 'express'\nimport path from 'path'\nimport fs from 'fs'\n\nimport mime from 'mime-types'\n\nconst router = express.Router()\n\n/**\n * opts {\n * spa: boolean\n * showHidden: boolean\n * }\n */\nexport default (sitePath, opts) => {\n\tconst options = {\n\t\tdotfiles: opts.showHidden ? 'allow': 'deny'\n\t}\n\n\trouter.get('*', async (req, res) => {\n\t\tconst targetPath = req.originalUrl.split('?')[0]\n\t\ttry {\n\t\t\tconst target = path.join(sitePath, targetPath)\n\t\t\tconst stat = await fs.statSync(target)\n\t\t\tif(stat.isFile()) {\n\t\t\t\tif(!mime.lookup(target)){\n\t\t\t\t\tres.type('text/plain')\n\t\t\t\t}\n\t\t\t\treturn res.sendFile(target, options)\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(fs.existsSync(path.join(sitePath, targetPath, 'index.html'))) {\n\t\t\t\t\treturn res.sendfile(path.join(sitePath, targetPath, 'index.html'))\n\t\t\t\t}\n\t\t\t\treturn res.sendFile(path.join(sitePath, `${targetPath}.html`), (err) => {\n\t\t\t\t\tif(err) {\n\t\t\t\t\t\treturn res.status(404).send(404)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t} catch(err) {\n\t\t\tif(opts.spa == true) {\n\t\t\t\treturn res.sendFile(path.join(sitePath, `index.html`))\n\t\t\t}\n\t\t\tif(err.errno == -2) {\n\t\t\t\treturn res.status(404).send(404)\n\t\t\t}\n\t\t\treturn res.send(err)\n\t\t}\n\t})\n\n\treturn router\n}"]}